ansible-doc MODULE_NAME

ansible-doc: Displays data on modules installed in Ansible libraries.
$ ansible-doc [-M module_path] [-l] [-s] [module...]

Ad-Hoc Keywords
ansible-vault: Using this you can encrypt any structured data file used by Ansible.
$ ansible-vault [create|decrypt|edit|encrypt|rekey] [--help] [options] file_name

ansible-galaxy: This is a shared repository for Ansible roles. This ansible-galaxy command can be utilized to manage these roles, or to create a skeleton framework for the roles to be uploaded to Galaxy.
$ ansible-galaxy [delete|import|info|init|install|list|login|remove|search|setup] [--help] [options]


-
  name: Deploy a web application
  hosts: db_and_web_server
  vars:
    db_name: employee_db
    db_user: db_user
    db_password: Passw0rd
  tasks:
    - name: Install dependencies
      apt: name={{ item }} state=installed
      with_items:
       - python
       - python-setuptools
       - python-dev
       - build-essential
       - python-pip
       - python-mysqldb

    - name: Install MySQL database
      apt:
        name: "{{ item }}"
        state:  installed
      with_items:
       - mysql-server
       - mysql-client

    - name: Start Mysql Service
      service:
        name: mysql
        state: started
        enabled: yes

    - name: Create Application Database
      mysql_db: name={{ db_name }} state=present


    - name: Create Application DB User
      mysql_user: name={{ db_user }} password={{ db_password }} priv='*.*:ALL' host='%' state='present'

    - name: Install Python Flask dependencies
      pip:
        name: '{{ item }}'
        state: present
      with_items:
       - flask
       - flask-mysql

    - name: Copy web-server code
      copy: src=app.py dest=/opt/app.py

    - name: Start web-application
      shell: FLASK_APP=/opt/app.py nohup flask run --host=0.0.0.0 &



- name: MY PLAY
  hosts: localhost
  tasks:
   - name: install nginx
     apt:
       name: nginx
       state: latest
       update_cache: yes
   - name: start nginx
     service:
       name: nginx
       state: started

   - name: template code
     template:
       src: sites-enabled.j2
       dest: /etc/nginx/sites-enabled/default

   - name: install nginx
     service:
       name: nginx
       state: restarted

