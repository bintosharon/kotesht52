Program Execution with Maven
Now, to make your Java program work with Maven, incorporate exec-maven-plugin in pom.xml file.

This will eliminate the need for using jar with java path to run the source code. Java path gets configured in Maven itself by including exec-maven-plugin in pom.xml.

Once the pom file is ready with the exec maven plugin, source code can be executed using mvn exec:java.

Sample pom file with maven-compile and exec-maven plugin after <Dependencies></Dependencies> tag:
<build>
  <sourceDirectory>src</sourceDirectory>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
          <version>3.3</version>
            <configuration>
              <source>1.8</source>
              <target>1.8</target>
             </configuration>
        </plugin>
   <plugin>
   <groupId>org.codehaus.mojo</groupId>
      <artifactId>exec-maven-plugin</artifactId>
         <version>1.2.1</version>
            <configuration>
              <mainClass>com.fresco.play.App</mainClass>
            </configuration>
     </plugin>
   </plugins>
</build>



Create WAR File
We can create and use war file in a different way.
Using war type in the project package.
Using war:war goal.
Using war type in the project package.
First, we need to compile the project, type mvn compile.
Enter mvn clean package.
It will generate the war file in the target folder.
Using war:war goal to create war file.
Enter mvn compile war:war . It will compile and generate war file together.
It will create generate war in the target folder target/second-war-project.war



<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.maven</groupId>
  <artifactId>MyMavenApp</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <build>
                <plugins>
                        <plugin>
                                <groupId>org.apache.maven.plugins</groupId>
                                <artifactId>maven-compiler-plugin</artifactId>
                                <version>3.3</version>
                                <configuration>
                                        <source>1.8</source>
                                        <target>1.8</target>
                                </configuration>
                        </plugin>
                        <plugin>
                                <groupId>org.codehaus.mojo</groupId>
                                <artifactId>exec-maven-plugin</artifactId>
                                <version>1.2.1</version>
                                <configuration>
                                        <mainClass>javaApp.Test</mainClass>
                                </configuration>
                        </plugin>
                </plugins>
        </build>
</project>